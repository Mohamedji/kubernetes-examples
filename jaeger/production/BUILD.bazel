load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")
load("@k8s_object//:defaults.bzl", "k8s_object")

k8s_object(
    name = "cassandra_pdb",
    kind = "pdb",
    template = ":cassandra-pdb.yaml",
)

k8s_object(
    name = "cassandra_schema_job",
    kind = "job",
    template = ":cassandra-schema-job.yaml",
)

k8s_object(
    name = "cassandra_service",
    kind = "service",
    template = ":cassandra-service.yaml",
)

k8s_object(
    name = "cassandra_statefulset",
    kind = "statefulset",
    template = ":cassandra-statefulset.yaml",
)

k8s_object(
    name = "jaeger_collector_deployment",
    kind = "deployment",
    template = ":jaeger-collector-deployment.yaml",
)

k8s_object(
    name = "jaeger_collector_pdb",
    kind = "pdb",
    template = ":jaeger-collector-pdb.yaml",
)

k8s_object(
    name = "jaeger_collector_service",
    kind = "service",
    template = ":jaeger-collector-service.yaml",
)

k8s_object(
    name = "jaeger_query_deployment",
    kind = "deployment",
    template = ":jaeger-query-deployment.yaml",
)

k8s_object(
    name = "jaeger_query_pdb",
    kind = "pdb",
    template = ":jaeger-query-pdb.yaml",
)

k8s_object(
    name = "jaeger_query_service",
    kind = "service",
    template = ":jaeger-query-service.yaml",
)

k8s_object(
    name = "zipkin_service",
    kind = "service",
    template = ":zipkin-service.yaml",
)

k8s_objects(
    name = "tracing",
    objects = [
        ":cassandra_pdb",
        ":cassandra_service",
        ":cassandra_statefulset",
        ":cassandra_schema_job",
        ":jaeger_collector_service",
        ":jaeger_collector_deployment",
        ":jaeger_collector_pdb",
        ":jaeger_query_deployment",
        ":jaeger_query_pdb",
        ":jaeger_query_service",
        ":zipkin_service",
    ],
    visibility = ["//visibility:public"],
)
